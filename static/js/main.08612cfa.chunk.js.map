{"version":3,"sources":["utils/fetchClient.ts","types/ErrorType.ts","api/todos.ts","api/users.ts","components/Auth/AuthForm.tsx","components/Auth/AuthContext.tsx","components/NewTodoField/NewTodoField.tsx","types/FilterType.ts","components/TodoFilters/TodoFilters.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","components/ErrorNotification/ErrorNotification.tsx","App.tsx","index.tsx"],"names":["BASE_URL","wait","delay","Promise","resolve","setTimeout","request","url","method","data","options","body","JSON","stringify","headers","then","fetch","response","ok","Error","json","ErrorType","client","createTodo","todo","deleteTodo","todoId","updateTodo","updateData","getUserByEmail","email","a","users","createUser","name","AuthForm","onLogin","useState","setEmail","setName","needToRegister","setNeedToRegister","loading","setLoading","errorMessage","setErrorMessage","saveUser","user","localStorage","setItem","useEffect","userData","getItem","parse","error","loadUser","handleSubmit","event","preventDefault","onSubmit","className","htmlFor","classNames","type","id","placeholder","disabled","value","required","onChange","e","target","minLength","AuthContext","React","createContext","AuthProvider","children","setUser","Provider","FilterType","NewTodoField","isUploadError","onAdd","isTodoLoading","toggleAll","setError","newTodoTitle","setNewTodoTitle","newTodoField","useRef","useContext","current","focus","data-cy","onClick","trim","newTodo","title","completed","userId","EmptyTitle","ref","TodoFilters","todos","setFiltredTodos","clearCompleted","completedTodos","All","typeOfFilter","setTypeOfFilter","filterHendler","filter","filtredTodos","useMemo","item","Active","Completed","length","href","selected","TodoInfo","memo","todoList","onDelete","deletedTodosId","activeTodoId","hendeleCheckboxChange","editTodo","updatedTodoID","isSpinerActive","includes","isEditing","setIsEditing","newTitle","setNewTitle","handleSubmitEdit","checked","onBlur","onKeyDown","key","onDoubleClick","TodoList","tempTodo","TransitionGroup","map","todoItem","CSSTransition","timeout","ErrorNotification","errorMesage","setErrorMesage","timer","None","clearTimeout","LoadError","UploadError","RemoveError","UpdatedError","aria-label","App","setIsUploadError","setTodos","setTempTodo","setIsTodoLoading","setDeletedTodosId","setActiveTodoId","setUpdatedTodoID","loadTodosFromServer","getTodosFromServer","uploadTodosOnServer","prevTodos","hendleRemoveTodo","prevIds","visibleTodos","updatedTodos","doneTasks","doneIds","all","checkedTodoList","totalTodos","areTodosComplited","notCompletedTodos","forEach","Root","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.08612cfa.chunk.js","sourcesContent":["/* eslint-disable @typescript-eslint/no-explicit-any */\nconst BASE_URL = 'https://mate.academy/students-api';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\ntype RequestMethod = 'GET' | 'POST' | 'PATCH' | 'DELETE';\n\nfunction request<T>(\n  url: string,\n  method: RequestMethod = 'GET',\n  data: any = null,\n): Promise<T> {\n  const options: RequestInit = { method };\n\n  if (data) {\n    options.body = JSON.stringify(data);\n    options.headers = {\n      'Content-Type': 'application/json; charset=UTF-8',\n    };\n  }\n\n  return wait(500)\n    .then(() => fetch(BASE_URL + url, options))\n    .then(response => {\n      if (!response.ok) {\n        throw new Error();\n      }\n\n      return response.json();\n    });\n}\n\nexport const client = {\n  get: <T>(url: string) => request<T>(url),\n  post: <T>(url: string, data: any) => request<T>(url, 'POST', data),\n  patch: <T>(url: string, data: any) => request<T>(url, 'PATCH', data),\n  delete: (url: string) => request(url, 'DELETE'),\n};\n","export enum ErrorType {\n  None = '',\n  LoadError = 'Unable to load a todos',\n  UploadError = 'Unable to add a todo',\n  UpdatedError = 'Unable to uodate a todo',\n  RemoveError = 'Unable to delete a todo',\n  EmptyTitle = 'Title can\\'t be empty',\n}\n","import { Todo } from '../types/Todo';\nimport { client } from '../utils/fetchClient';\n\nexport const getTodos = (userId: number) => {\n  return client.get<Todo[]>(`/todos?userId=${userId}`);\n};\n\nexport const createTodo = (todo: Partial<Todo>) => {\n  return client.post<Todo>('/todos', todo);\n};\n\nexport const deleteTodo = (todoId: number) => {\n  return client.delete(`/todos/${todoId}`);\n};\n\nexport const patchTodo = (todoId: number, completed: boolean) => {\n  return client.patch(`/todos/${todoId}`, { completed });\n};\n\nexport const updateTodo = (todoId: number, updateData: Partial<Todo>) => {\n  return client.patch(`/todos/${todoId}`, updateData);\n};\n","import { User } from '../types/User';\nimport { client } from '../utils/fetchClient';\n\nexport const getUserByEmail = async (email: string) => {\n  const users = await client.get<User[]>(`/users?email=${email}`);\n\n  return users[0] || null;\n};\n\ntype UserData = Pick<User, 'name' | 'email'>;\n\nexport const createUser = async ({ email, name }: UserData) => {\n  return client.post<User>('/users', { email, name });\n};\n","import React, { useEffect, useState } from 'react';\nimport classNames from 'classnames';\nimport { createUser, getUserByEmail } from '../../api/users';\nimport { User } from '../../types/User';\n\nexport type Props = {\n  onLogin: (user: User) => void,\n};\n\nexport const AuthForm: React.FC<Props> = ({ onLogin }) => {\n  const [email, setEmail] = useState('');\n  const [name, setName] = useState('');\n  const [needToRegister, setNeedToRegister] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [errorMessage, setErrorMessage] = useState('');\n\n  const saveUser = (user: User) => {\n    localStorage.setItem('user', JSON.stringify(user));\n    onLogin(user);\n  };\n\n  useEffect(() => {\n    const userData = localStorage.getItem('user');\n\n    if (!userData) {\n      return;\n    }\n\n    try {\n      const user = JSON.parse(userData) as User;\n\n      onLogin(user);\n    } catch (error) {\n      setErrorMessage('Need to login');\n    }\n  }, []);\n\n  const loadUser = async () => {\n    const user = await getUserByEmail(email);\n\n    if (user) {\n      saveUser(user);\n    } else {\n      setNeedToRegister(true);\n    }\n  };\n\n  const registerUser = () => {\n    return createUser({ name, email })\n      .then(saveUser);\n  };\n\n  const handleSubmit = async (event: React.FormEvent) => {\n    event.preventDefault();\n\n    setErrorMessage('');\n    setLoading(true);\n\n    try {\n      if (needToRegister) {\n        await registerUser();\n      } else {\n        await loadUser();\n      }\n    } catch (error) {\n      setErrorMessage('Something went wrtong');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <form onSubmit={handleSubmit} className=\"box mt-5\">\n      <h1 className=\"title is-3\">\n        {needToRegister ? 'You need to register' : 'Log in to open todos'}\n      </h1>\n\n      <div className=\"field\">\n        <label className=\"label\" htmlFor=\"user-email\">\n          Email\n        </label>\n\n        <div\n          className={classNames('control has-icons-left', {\n            'is-loading': loading,\n          })}\n        >\n          <input\n            type=\"email\"\n            id=\"user-email\"\n            className={classNames('input', {\n              'is-danger': !needToRegister && errorMessage,\n            })}\n            placeholder=\"Enter your email\"\n            disabled={loading || needToRegister}\n            value={email}\n            required\n            onChange={e => setEmail(e.target.value)}\n          />\n\n          <span className=\"icon is-small is-left\">\n            <i className=\"fas fa-envelope\" />\n          </span>\n        </div>\n\n        {!needToRegister && errorMessage && (\n          <p className=\"help is-danger\">{errorMessage}</p>\n        )}\n      </div>\n\n      {needToRegister && (\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"user-name\">\n            Your Name\n          </label>\n\n          <div\n            className={classNames('control has-icons-left', {\n              'is-loading': loading,\n            })}\n          >\n            <input\n              type=\"text\"\n              id=\"user-name\"\n              className={classNames('input', {\n                'is-danger': needToRegister && errorMessage,\n              })}\n              placeholder=\"Enter your name\"\n              required\n              minLength={4}\n              disabled={loading}\n              value={name}\n              onChange={e => setName(e.target.value)}\n            />\n\n            <span className=\"icon is-small is-left\">\n              <i className=\"fas fa-user\" />\n            </span>\n          </div>\n\n          {needToRegister && errorMessage && (\n            <p className=\"help is-danger\">{errorMessage}</p>\n          )}\n        </div>\n      )}\n\n      <div className=\"field\">\n        <button\n          type=\"submit\"\n          className={classNames('button is-primary', {\n            'is-loading': loading,\n          })}\n        >\n          {needToRegister ? 'Register' : 'Login'}\n        </button>\n      </div>\n    </form>\n  );\n};\n","import React, { useState } from 'react';\nimport { User } from '../../types/User';\nimport { AuthForm } from './AuthForm';\n\nexport const AuthContext = React.createContext<User | null>(null);\n\ntype Props = {\n  children: React.ReactNode;\n};\n\nexport const AuthProvider: React.FC<Props> = ({ children }) => {\n  const [user, setUser] = useState<User | null>(null);\n\n  if (!user) {\n    return <AuthForm onLogin={setUser} />;\n  }\n\n  return (\n    <AuthContext.Provider value={user}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n","/* eslint-disable jsx-a11y/control-has-associated-label */\nimport React, {\n  useContext,\n  useEffect,\n  useRef,\n  useState,\n} from 'react';\nimport { AuthContext } from '../Auth/AuthContext';\nimport { Todo } from '../../types/Todo';\nimport { ErrorType } from '../../types/ErrorType';\n\ntype Props = {\n  isUploadError: boolean,\n  onAdd: (todo: Todo) => void,\n  isTodoLoading: boolean,\n  toggleAll: () => void,\n  setError: (value: ErrorType) => void,\n};\n\nexport const NewTodoField: React.FC<Props> = ({\n  isUploadError,\n  onAdd,\n  isTodoLoading,\n  toggleAll,\n  setError,\n}) => {\n  const [newTodoTitle, setNewTodoTitle] = useState('');\n\n  const newTodoField = useRef<HTMLInputElement>(null);\n  const user = useContext(AuthContext);\n\n  const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    if (newTodoTitle.trim()) {\n      const newTodo = {\n        title: newTodoTitle.trim(),\n        completed: false,\n        userId: user?.id,\n        id: 0,\n      };\n\n      onAdd(newTodo);\n      setNewTodoTitle('');\n    } else {\n      setError(ErrorType.EmptyTitle);\n    }\n  };\n\n  useEffect(() => {\n    if (newTodoField.current) {\n      newTodoField.current.focus();\n    }\n  }, []);\n\n  return (\n    <header className=\"todoapp__header\">\n      <button\n        data-cy=\"ToggleAllButton\"\n        type=\"button\"\n        className=\"todoapp__toggle-all active\"\n        onClick={toggleAll}\n      />\n\n      <form\n        onSubmit={handleSubmit}\n      >\n        <input\n          data-cy=\"NewTodoField\"\n          type=\"text\"\n          ref={newTodoField}\n          className=\"todoapp__new-todo\"\n          placeholder=\"What needs to be done?\"\n          value={newTodoTitle}\n          onChange={event => setNewTodoTitle(event.target.value)}\n          disabled={isUploadError || isTodoLoading}\n        />\n      </form>\n    </header>\n  );\n};\n","export enum FilterType {\n  Active = 'active',\n  Completed = 'completed',\n  All = 'all',\n}\n","import React, { useEffect, useMemo, useState } from 'react';\nimport classNames from 'classnames';\nimport { FilterType } from '../../types/FilterType';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[],\n  setFiltredTodos: (filtredTodos: Todo[]) => void,\n  clearCompleted: () => void,\n  completedTodos: number,\n};\n\nexport const TodoFilters: React.FC<Props> = ({\n  todos,\n  setFiltredTodos,\n  clearCompleted,\n  completedTodos,\n}) => {\n  const [typeOfFilter, setTypeOfFilter] = useState(FilterType.All);\n\n  const filterHendler = (filter: FilterType) => {\n    setTypeOfFilter(filter);\n  };\n\n  const filtredTodos = useMemo(() => {\n    const toFilter = todos.filter(item => {\n      switch (typeOfFilter) {\n        case FilterType.Active:\n          return !item.completed;\n        case FilterType.Completed:\n          return item.completed;\n        default:\n          return item;\n      }\n    });\n\n    return toFilter;\n  }, [typeOfFilter, todos]);\n\n  useEffect(() => {\n    setFiltredTodos(filtredTodos);\n  }, [filtredTodos]);\n\n  return (\n    <footer className=\"todoapp__footer\" data-cy=\"Footer\">\n      <span className=\"todo-count\" data-cy=\"todosCounter\">\n        {todos.filter(todo => !todo.completed).length}\n        {' '}\n        items left\n      </span>\n\n      <nav className=\"filter\" data-cy=\"Filter\">\n        <a\n          data-cy=\"FilterLinkAll\"\n          href=\"#/\"\n          className={classNames(\n            'filter__link', { selected: typeOfFilter === FilterType.All },\n          )}\n          onClick={() => filterHendler(FilterType.All)}\n        >\n          All\n        </a>\n\n        <a\n          data-cy=\"FilterLinkActive\"\n          href=\"#/active\"\n          className={classNames(\n            'filter__link', { selected: typeOfFilter === FilterType.Active },\n          )}\n          onClick={() => filterHendler(FilterType.Active)}\n        >\n          Active\n        </a>\n        <a\n          data-cy=\"FilterLinkCompleted\"\n          href=\"#/completed\"\n          className={classNames(\n            'filter__link', {\n              selected: typeOfFilter === FilterType.Completed,\n            },\n          )}\n          onClick={() => filterHendler(FilterType.Completed)}\n        >\n          Completed\n        </a>\n      </nav>\n\n      <button\n        data-cy=\"ClearCompletedButton\"\n        type=\"button\"\n        className={classNames(\n          'todoapp__clear-completed',\n          { 'is-hidden': !completedTodos },\n        )}\n        onClick={clearCompleted}\n      >\n        Clear completed\n      </button>\n    </footer>\n  );\n};\n","import classNames from 'classnames';\nimport React, { useEffect, useRef, useState } from 'react';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todoList: Todo,\n  onDelete: (id: number) => void,\n  deletedTodosId: number[],\n  activeTodoId: number[],\n  hendeleCheckboxChange: (id: number, completed: boolean) => void,\n  editTodo: (id: number, newTitle: string) => void,\n  updatedTodoID: number[],\n};\n\nexport const TodoInfo: React.FC<Props> = React.memo(({\n  todoList,\n  onDelete,\n  deletedTodosId,\n  activeTodoId,\n  hendeleCheckboxChange,\n  editTodo,\n  updatedTodoID,\n}) => {\n  const { title, completed, id } = todoList;\n  const isSpinerActive = deletedTodosId.includes(id)\n    || activeTodoId.includes(id) || updatedTodoID.includes(id);\n  const [isEditing, setIsEditing] = useState(false);\n  const [newTitle, setNewTitle] = useState(title);\n\n  const newTodoField = useRef<HTMLInputElement>(null);\n\n  useEffect(() => {\n    if (newTodoField.current) {\n      newTodoField.current.focus();\n    }\n  }, [isEditing]);\n\n  const handleSubmitEdit = async (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    if (newTitle.trim() !== title) {\n      await editTodo(id, newTitle);\n    }\n\n    if (!newTitle.length) {\n      onDelete(id);\n    }\n\n    setIsEditing(false);\n  };\n\n  const onBlurSubmitEdit = (event: React.FocusEvent) => {\n    event.preventDefault();\n\n    if (newTitle.trim()) {\n      editTodo(id, newTitle);\n    }\n\n    setIsEditing(false);\n  };\n\n  const keyDownHandler = (event: React.KeyboardEvent<HTMLInputElement>) => {\n    if (event.key === 'Escape') {\n      setNewTitle(title);\n      setIsEditing(false);\n    }\n  };\n\n  return (\n    <div\n      data-cy=\"Todo\"\n      className={classNames(\n        'todo',\n        { completed },\n      )}\n    >\n      <label className=\"todo__status-label\">\n        <input\n          data-cy=\"TodoStatus\"\n          type=\"checkbox\"\n          className=\"todo__status\"\n          checked\n          onChange={() => hendeleCheckboxChange(id, completed)}\n        />\n      </label>\n\n      {isEditing ? (\n        <form onSubmit={handleSubmitEdit}>\n          <input\n            type=\"text\"\n            className=\"todo__title-field\"\n            placeholder=\"Empty todo will be deleted\"\n            ref={newTodoField}\n            value={newTitle}\n            onChange={event => setNewTitle(event.target.value)}\n            onBlur={onBlurSubmitEdit}\n            onKeyDown={keyDownHandler}\n          />\n        </form>\n      ) : (\n        <>\n          <span\n            data-cy=\"TodoTitle\"\n            className=\"todo__title\"\n            onDoubleClick={() => setIsEditing(true)}\n          >\n            {title}\n          </span>\n          <button\n            type=\"button\"\n            className=\"todo__remove\"\n            data-cy=\"TodoDeleteButton\"\n            onClick={() => onDelete(id)}\n          >\n            ×\n          </button>\n        </>\n      )}\n\n      <div\n        data-cy=\"TodoLoader\"\n        className={classNames(\n          'modal',\n          'overlay',\n          { 'is-active': isSpinerActive },\n        )}\n      >\n        <div className=\"modal-background has-background-white-ter\" />\n        <div className=\"loader\" />\n      </div>\n    </div>\n  );\n});\n","import React from 'react';\nimport {\n  CSSTransition,\n  TransitionGroup,\n} from 'react-transition-group';\nimport { Todo } from '../../types/Todo';\nimport { TodoInfo } from '../TodoInfo/TodoInfo';\n\ntype Props = {\n  filtredTodos: Todo[],\n  isTodoLoading: boolean,\n  deletedTodosId: number[],\n  tempTodo: Todo | null,\n  activeTodoId: number[],\n  onDelete: (id: number) => void,\n  hendeleCheckboxChange: (id: number, completed: boolean) => void,\n  editTodo: (id: number, newTitle: string) => void,\n  updatedTodoID: number[],\n};\n\nexport const TodoList: React.FC<Props> = React.memo(\n  ({\n    filtredTodos,\n    isTodoLoading,\n    onDelete,\n    deletedTodosId,\n    tempTodo,\n    activeTodoId,\n    hendeleCheckboxChange,\n    editTodo,\n    updatedTodoID,\n  }) => {\n    return (\n      <section className=\"todoapp__main\" data-cy=\"TodoList\">\n        <TransitionGroup>\n          {filtredTodos.map(todoItem => (\n            <CSSTransition\n              key={todoItem.id}\n              timeout={300}\n              classNames=\"item\"\n            >\n              <TodoInfo\n                todoList={todoItem}\n                key={todoItem.id}\n                onDelete={onDelete}\n                deletedTodosId={deletedTodosId}\n                activeTodoId={activeTodoId}\n                hendeleCheckboxChange={hendeleCheckboxChange}\n                editTodo={editTodo}\n                updatedTodoID={updatedTodoID}\n              />\n            </CSSTransition>\n          ))}\n\n          {isTodoLoading && tempTodo && (\n            <CSSTransition\n              key={0}\n              timeout={300}\n              classNames=\"temp-item\"\n            >\n              <TodoInfo\n                todoList={tempTodo}\n                key={tempTodo.id}\n                onDelete={onDelete}\n                deletedTodosId={deletedTodosId}\n                activeTodoId={activeTodoId}\n                hendeleCheckboxChange={hendeleCheckboxChange}\n                editTodo={editTodo}\n                updatedTodoID={updatedTodoID}\n              />\n            </CSSTransition>\n          )}\n        </TransitionGroup>\n      </section>\n    );\n  },\n);\n","import React, {\n  memo, useEffect, useMemo, useState,\n} from 'react';\nimport { ErrorType } from '../../types/ErrorType';\n\ntype Props = {\n  error: ErrorType,\n  setError: (value: ErrorType) => void,\n};\n\nexport const ErrorNotification: React.FC<Props> = memo(\n  ({ error, setError }) => {\n    const [errorMesage, setErrorMesage] = useState('');\n\n    useEffect(() => {\n      const timer = setTimeout(() => {\n        setError(ErrorType.None);\n      }, 3000);\n\n      return () => {\n        clearTimeout(timer);\n      };\n    }, [error]);\n\n    useMemo(() => {\n      switch (error) {\n        case ErrorType.LoadError:\n          setErrorMesage(ErrorType.LoadError);\n          break;\n        case ErrorType.UploadError:\n          setErrorMesage('Unable to add a todo');\n          break;\n        case ErrorType.RemoveError:\n          setErrorMesage(ErrorType.RemoveError);\n          break;\n        case ErrorType.UpdatedError:\n          setErrorMesage(ErrorType.UpdatedError);\n          break;\n        case ErrorType.EmptyTitle:\n          setErrorMesage(ErrorType.EmptyTitle);\n          break;\n\n        default:\n          setErrorMesage('');\n      }\n    }, [error]);\n\n    return (\n      <div\n        data-cy=\"ErrorNotification\"\n        className=\"notification is-danger is-light has-text-weight-normal\"\n      >\n        <button\n          data-cy=\"HideErrorButton\"\n          type=\"button\"\n          className=\"delete\"\n          aria-label=\"Delete\"\n          onClick={() => setError(ErrorType.None)}\n        />\n        {errorMesage}\n      </div>\n    );\n  },\n);\n","/* eslint-disable jsx-a11y/control-has-associated-label */\n/* eslint-disable no-param-reassign */\nimport React, {\n  useContext,\n  useEffect,\n  useMemo,\n  useState,\n} from 'react';\nimport {\n  createTodo,\n  deleteTodo,\n  getTodos,\n  updateTodo,\n} from './api/todos';\nimport { AuthContext } from './components/Auth/AuthContext';\nimport { NewTodoField } from './components/NewTodoField/NewTodoField';\nimport { TodoFilters } from './components/TodoFilters/TodoFilters';\nimport { TodoList } from './components/TodoList/TodoList';\nimport { Todo } from './types/Todo';\nimport {\n  ErrorNotification,\n} from './components/ErrorNotification/ErrorNotification';\nimport { ErrorType } from './types/ErrorType';\n\nexport const App: React.FC = () => {\n  const [isUploadError, setIsUploadError] = useState(false);\n  const [error, setError] = useState(ErrorType.None);\n\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [tempTodo, setTempTodo] = useState<Todo | null>(null);\n  const [filtredTodos, setFiltredTodos] = useState<Todo[]>([]);\n  const [isTodoLoading, setIsTodoLoading] = useState(false);\n  const [deletedTodosId, setDeletedTodosId] = useState<number[]>([]);\n  const [activeTodoId, setActiveTodoId] = useState<number[]>([]);\n  const [updatedTodoID, setUpdatedTodoID] = useState<number[]>([]);\n\n  const user = useContext(AuthContext);\n\n  const loadTodosFromServer = async () => {\n    try {\n      if (user) {\n        const getTodosFromServer = await getTodos(user.id);\n\n        setTodos(getTodosFromServer);\n      }\n    } catch (e) {\n      setError(ErrorType.LoadError);\n    }\n  };\n\n  const uploadTodosOnServer = async (todo: Todo) => {\n    if (user) {\n      setIsTodoLoading(true);\n\n      try {\n        setActiveTodoId([0]);\n        setTempTodo(todo);\n        const newTodo = await createTodo({\n          title: todo.title,\n          userId: todo.userId,\n          completed: false,\n        });\n\n        setTodos(prevTodos => [...prevTodos, newTodo]);\n        setActiveTodoId([]);\n      } catch {\n        setIsUploadError(true);\n        setError(ErrorType.UploadError);\n      } finally {\n        setTempTodo(null);\n        setIsTodoLoading(false);\n      }\n    }\n  };\n\n  const hendleRemoveTodo = async (id: number) => {\n    try {\n      setDeletedTodosId(prevIds => [...prevIds, id]);\n      await deleteTodo(id);\n      const visibleTodos = filtredTodos.filter(todo => {\n        return todo.id !== id;\n      });\n\n      setTodos(visibleTodos);\n    } catch {\n      setError(ErrorType.RemoveError);\n    }\n\n    setDeletedTodosId([]);\n  };\n\n  const editTodo = async (id: number, newTitle: string) => {\n    const updatedTodos = [...todos].map((todo) => {\n      if (todo.id === id) {\n        todo.title = newTitle;\n      }\n\n      return todo;\n    });\n\n    setTodos(updatedTodos);\n\n    try {\n      setUpdatedTodoID(prevIds => [...prevIds, id]);\n      await updateTodo(id, { title: newTitle });\n    } catch {\n      setError(ErrorType.UpdatedError);\n    }\n\n    setUpdatedTodoID([]);\n  };\n\n  const clearCompleted = async () => {\n    const doneTasks = todos.filter(todo => todo.completed);\n    const doneIds = doneTasks.map((todo) => {\n      return todo.id;\n    });\n\n    setDeletedTodosId(doneIds);\n\n    await Promise.all(doneTasks.map((todo) => deleteTodo(todo.id)));\n\n    const visibleTodos = todos.filter(todo => {\n      return !todo.completed;\n    });\n\n    setTodos(visibleTodos);\n\n    setDeletedTodosId([]);\n  };\n\n  const hendeleCheckboxChange = async (id: number, completed: boolean) => {\n    try {\n      await updateTodo(id, { completed: !completed });\n\n      const checkedTodoList = todos.map(todo => {\n        if (todo.id === id) {\n          return { ...todo, completed: !completed };\n        }\n\n        return todo;\n      });\n\n      setTodos(checkedTodoList);\n    } catch {\n      setError(ErrorType.UpdatedError);\n    }\n  };\n\n  const completedTodos = useMemo(() => {\n    const finishedTodos = todos.filter(todo => todo.completed);\n\n    return finishedTodos.length;\n  }, [todos]);\n\n  const toggleAll = async () => {\n    const totalTodos = todos.length;\n    const areTodosComplited\n    = todos.filter(todo => todo.completed).length === totalTodos;\n\n    setTodos(todos.map(todo => ({ ...todo, completed: !areTodosComplited })));\n\n    try {\n      const notCompletedTodos = todos.filter(todo => !todo.completed);\n\n      if (notCompletedTodos.length) {\n        notCompletedTodos.forEach(async todo => {\n          updateTodo(todo.id, { completed: !todo.completed });\n        });\n      } else {\n        todos.forEach(async todo => {\n          updateTodo(todo.id, { completed: !todo.completed });\n        });\n      }\n    } catch {\n      setError(ErrorType.UpdatedError);\n    }\n  };\n\n  useEffect(() => {\n    loadTodosFromServer();\n  }, []);\n\n  return (\n    <div className=\"todoapp\">\n      <h1 className=\"todoapp__title\">todos</h1>\n      <div className=\"todoapp__content\">\n        <NewTodoField\n          onAdd={uploadTodosOnServer}\n          toggleAll={toggleAll}\n          isUploadError={isUploadError}\n          setError={setError}\n          isTodoLoading={isTodoLoading}\n        />\n\n        <TodoList\n          filtredTodos={filtredTodos}\n          isTodoLoading={isTodoLoading}\n          deletedTodosId={deletedTodosId}\n          tempTodo={tempTodo}\n          activeTodoId={activeTodoId}\n          onDelete={hendleRemoveTodo}\n          hendeleCheckboxChange={hendeleCheckboxChange}\n          editTodo={editTodo}\n          updatedTodoID={updatedTodoID}\n        />\n\n        <TodoFilters\n          todos={todos}\n          setFiltredTodos={setFiltredTodos}\n          clearCompleted={clearCompleted}\n          completedTodos={completedTodos}\n        />\n      </div>\n\n      {error !== ErrorType.None && (\n        <ErrorNotification\n          error={error}\n          setError={setError}\n        />\n      )}\n    </div>\n  );\n};\n","import React from 'react';\nimport { createRoot } from 'react-dom/client';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './styles/index.scss';\n\nimport { App } from './App';\nimport { AuthProvider } from './components/Auth/AuthContext';\n\nconst Root = () => (\n  <AuthProvider>\n    <App />\n  </AuthProvider>\n);\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(<Root />);\n"],"sourceRoot":""}